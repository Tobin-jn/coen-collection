// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Movie should render like snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Movie
    date="10-20-2018"
    overview="overview"
    poster="url"
    title="title"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <i
          className="far fa-star"
          onClick={[Function]}
        />
        <img
          alt="Movie Poster"
          className="movie-poster"
          src="url"
        />
      </div>,
      "className": "Movie",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <i
            className="far fa-star"
            onClick={[Function]}
          />,
          <img
            alt="Movie Poster"
            className="movie-poster"
            src="url"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "far fa-star",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Movie Poster",
            "className": "movie-poster",
            "src": "url",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <i
            className="far fa-star"
            onClick={[Function]}
          />
          <img
            alt="Movie Poster"
            className="movie-poster"
            src="url"
          />
        </div>,
        "className": "Movie",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <i
              className="far fa-star"
              onClick={[Function]}
            />,
            <img
              alt="Movie Poster"
              className="movie-poster"
              src="url"
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "far fa-star",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Movie Poster",
              "className": "movie-poster",
              "src": "url",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
